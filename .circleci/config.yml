version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.sbt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: cat /dev/null | sbt test:compile

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.m2
            - ~/.sbt
          key: v1-dependencies-{{ checksum "build.sbt" }}

      # run tests!
      - run: cat /dev/null | sbt test:test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-reports/
            find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} ~/test-reports/ \;
          when: always

      - store-test-results:
          path: ~/test-reports/

      - store-artifacts:
          path: ~/test-reports/

  deploy_environment:
    machine:
      docker_layer_caching: true

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - terraform-003

      - run: bash bin/deploy_environment.sh

      - store-artifacts:
          path: deployment/.terraform/

      - save_cache:
          paths:
            - deployment/.terraform
          key: terraform-003

  destroy_environment:
    machine:
      docker_layer_caching: true

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - terraform-003

      - run: bash bin/destroy_environment.sh

      - store-artifacts:
          path: deployment/.terraform/

      - save_cache:
          paths:
            - deployment/.terraform
          key: terraform-003

  deploy_application:
    machine:
      docker_layer_caching: true

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - terraform-003
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: bash bin/deploy_application.sh dev

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.m2
            - ~/.sbt
          key: v1-dependencies-{{ checksum "build.sbt" }}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
#      - deploy_environment:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#      - deploy_application:
#          requires:
#            - deploy_environment
#          filters:
#            branches:
#              only: master